/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swings;

import com.beans.MobileData;
import com.database.AddMobile;
import com.database.DeleteMobile;
import com.database.GetConnection;
import com.database.SellMobile;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danish
 */
public class WelcomeForm1 extends javax.swing.JFrame {

    /**
     * Creates new form WelcomeForm1
     */
    public WelcomeForm1() {
        initComponents();
        setUserData();
        jPanel6.setVisible(false);
        jTabbedPane1.setIconAt(0, new ImageIcon("C:\\Users\\Acer\\Desktop\\mobile.jpg"));
        jTabbedPane1.setIconAt(1, new ImageIcon("C:\\Users\\Acer\\Desktop\\download.jpg"));
        jTabbedPane1.setIconAt(2, new ImageIcon("C:\\Users\\Acer\\Desktop\\image.png"));
        jPanel9.setVisible(false);
    
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userName = new javax.swing.JLabel();
        userImage = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        mobileImeiNumber = new javax.swing.JTextField();
        mobileCompany = new javax.swing.JComboBox();
        mobileModel = new javax.swing.JComboBox();
        mobilePrice = new javax.swing.JTextField();
        mobileWarranty = new javax.swing.JComboBox();
        mobileAccessories = new javax.swing.JLabel();
        mobileCharger = new javax.swing.JCheckBox();
        mobileEarphones = new javax.swing.JCheckBox();
        mobileUsbCable = new javax.swing.JCheckBox();
        addPhone = new javax.swing.JButton();
        mobileAddReset = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        mobileImeiNumber1 = new javax.swing.JTextField();
        searchMobile = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mobileCustomerName = new javax.swing.JTextField();
        mobileCustomerPayment = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        mobileCustomerNumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mobileCustomerAddress = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        mobileModelForm = new javax.swing.JLabel();
        mobileCompanyForm = new javax.swing.JLabel();
        mobileWarrantyForm = new javax.swing.JLabel();
        mobilePriceForm = new javax.swing.JLabel();
        mobileSell = new javax.swing.JButton();
        mobilePrint = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        mobileAllCompany = new javax.swing.JRadioButton();
        mobileAppleCompany = new javax.swing.JRadioButton();
        mobileSamsungCompany = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        printList = new javax.swing.JButton();
        mobileMotorolaCompany = new javax.swing.JRadioButton();
        mobileLenovoCompany = new javax.swing.JRadioButton();
        mobileXiaomiCompany = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gupta's Telecom"));

        jLabel1.setText("Welcome :- ");

        userName.setForeground(new java.awt.Color(51, 51, 255));
        userName.setText("name");

        userImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutMouseEntered(evt);
            }
        });
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        mobileImeiNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mobileImeiNumber.setText("Mobile Imei Number");
        mobileImeiNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobileImeiNumberKeyTyped(evt);
            }
        });

        mobileCompany.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mobileCompany.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Company", "Apple", "Samsung", "Motorola", "Lenovo", "Xiaomi" }));
        mobileCompany.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mobileCompanyItemStateChanged(evt);
            }
        });
        mobileCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileCompanyActionPerformed(evt);
            }
        });

        mobileModel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mobileModel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Model" }));
        mobileModel.setEnabled(false);
        mobileModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileModelActionPerformed(evt);
            }
        });

        mobilePrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mobilePrice.setText("Price");
        mobilePrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobilePriceKeyTyped(evt);
            }
        });

        mobileWarranty.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mobileWarranty.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Warranty", "3 months", "6 months", "1 Year", "2 Year" }));

        mobileAccessories.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mobileAccessories.setText("Accessories :");

        mobileCharger.setText("Charger");
        mobileCharger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileChargerActionPerformed(evt);
            }
        });

        mobileEarphones.setText("Earphones");
        mobileEarphones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileEarphonesActionPerformed(evt);
            }
        });

        mobileUsbCable.setText("Usb Cable");

        addPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addPhone.setText("Add to the List");
        addPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPhoneActionPerformed(evt);
            }
        });

        mobileAddReset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mobileAddReset.setText("Reset");
        mobileAddReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileAddResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(179, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mobileAccessories, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(mobileImeiNumber)
                        .addComponent(mobileCompany, 0, 225, Short.MAX_VALUE)
                        .addComponent(mobileModel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mobilePrice)
                        .addComponent(mobileWarranty, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(addPhone)
                                .addGap(18, 18, 18)
                                .addComponent(mobileAddReset))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(mobileCharger)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mobileEarphones)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mobileUsbCable)))))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mobileImeiNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobileCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobileModel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobilePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobileWarranty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobileAccessories, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileEarphones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mobileCharger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mobileUsbCable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mobileAddReset, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPhone))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Add Mobiles", jPanel2);

        mobileImeiNumber1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mobileImeiNumber1.setText("Mobile Imei Number");
        mobileImeiNumber1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobileImeiNumber1KeyTyped(evt);
            }
        });

        searchMobile.setText("Search");
        searchMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMobileActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer Details"));

        jLabel2.setText("Customer's Name ");

        mobileCustomerPayment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Payment Mode", "Cash", "Paytm", "Credit Card", "Debit Card", "Net Banking" }));

        jLabel3.setText("Contact Number");

        mobileCustomerNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobileCustomerNumberKeyTyped(evt);
            }
        });

        jLabel4.setText("Address :-");

        mobileCustomerAddress.setColumns(20);
        mobileCustomerAddress.setRows(5);
        jScrollPane1.setViewportView(mobileCustomerAddress);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Mobile Details"));

        mobileModelForm.setText("Model :- ");

        mobileCompanyForm.setText("Company :-");

        mobileWarrantyForm.setText("Warranty :- ");

        mobilePriceForm.setText("Price :-");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mobileCompanyForm)
                    .addComponent(mobileWarrantyForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mobilePriceForm)
                    .addComponent(mobileModelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(mobileModelForm, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobileCompanyForm, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mobileWarrantyForm, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(mobilePriceForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(32, 32, 32))
        );

        mobileSell.setText("Sell");
        mobileSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileSellActionPerformed(evt);
            }
        });

        mobilePrint.setText("Print");
        mobilePrint.setEnabled(false);
        mobilePrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobilePrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mobileCustomerPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mobileCustomerName, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addComponent(mobileCustomerNumber))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(mobileSell)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 252, Short.MAX_VALUE)
                .addComponent(mobilePrint)
                .addGap(134, 134, 134))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(mobileCustomerPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileCustomerNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileSell)
                    .addComponent(mobilePrint))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mobileImeiNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(searchMobile)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mobileImeiNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchMobile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Sell Mobile", jPanel4);

        jLabel9.setText("Select Company Name");

        buttonGroup1.add(mobileAllCompany);
        mobileAllCompany.setText("All");
        mobileAllCompany.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mobileAllCompanyItemStateChanged(evt);
            }
        });
        mobileAllCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileAllCompanyActionPerformed(evt);
            }
        });

        buttonGroup1.add(mobileAppleCompany);
        mobileAppleCompany.setText("Apple");
        mobileAppleCompany.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mobileAppleCompanyItemStateChanged(evt);
            }
        });
        mobileAppleCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileAppleCompanyActionPerformed(evt);
            }
        });

        buttonGroup1.add(mobileSamsungCompany);
        mobileSamsungCompany.setText("Samsung");
        mobileSamsungCompany.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mobileSamsungCompanyItemStateChanged(evt);
            }
        });
        mobileSamsungCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileSamsungCompanyActionPerformed(evt);
            }
        });

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Mobile List"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "S . No", "Model", "Price", "Quantity", "Warranty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        printList.setText("Print");
        printList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(printList)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(printList)
                .addContainerGap())
        );

        buttonGroup1.add(mobileMotorolaCompany);
        mobileMotorolaCompany.setText("Motorola");
        mobileMotorolaCompany.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mobileMotorolaCompanyItemStateChanged(evt);
            }
        });
        mobileMotorolaCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileMotorolaCompanyActionPerformed(evt);
            }
        });

        buttonGroup1.add(mobileLenovoCompany);
        mobileLenovoCompany.setText("Lenovo");
        mobileLenovoCompany.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mobileLenovoCompanyItemStateChanged(evt);
            }
        });
        mobileLenovoCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileLenovoCompanyActionPerformed(evt);
            }
        });

        buttonGroup1.add(mobileXiaomiCompany);
        mobileXiaomiCompany.setText("Xiaomi");
        mobileXiaomiCompany.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mobileXiaomiCompanyItemStateChanged(evt);
            }
        });
        mobileXiaomiCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileXiaomiCompanyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(mobileAllCompany)
                .addGap(18, 18, 18)
                .addComponent(mobileAppleCompany)
                .addGap(18, 18, 18)
                .addComponent(mobileSamsungCompany)
                .addGap(24, 24, 24)
                .addComponent(mobileMotorolaCompany)
                .addGap(18, 18, 18)
                .addComponent(mobileLenovoCompany)
                .addGap(18, 18, 18)
                .addComponent(mobileXiaomiCompany)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileAllCompany)
                    .addComponent(mobileAppleCompany)
                    .addComponent(mobileSamsungCompany)
                    .addComponent(mobileMotorolaCompany)
                    .addComponent(mobileLenovoCompany)
                    .addComponent(mobileXiaomiCompany))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mobile List", jPanel8);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(userImage, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logout)
                .addContainerGap())
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userImage, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(userName))
                    .addComponent(logout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        
        setVisible(false);
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeFrame().setVisible(true);
            }
        });
        
    }//GEN-LAST:event_logoutActionPerformed

    private void logoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseEntered
        // TODO add your handling code here:
        logout.setToolTipText("Name : "+userName+"last login ");
    }//GEN-LAST:event_logoutMouseEntered

    private void addPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPhoneActionPerformed
        // TODO add your handling code here:
            
        if(validationOfMobileData()){
            
            int data = AddMobile.addMobile(mobileInfo);
            
            if(data>0){
                
                JOptionPane.showMessageDialog(this, "added");
            }else{
                JOptionPane.showMessageDialog(this, "plz try again");
            }
           
        }
        
    }//GEN-LAST:event_addPhoneActionPerformed

    private void mobileEarphonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileEarphonesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileEarphonesActionPerformed

    private void mobileChargerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileChargerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileChargerActionPerformed

    private void mobileCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileCompanyActionPerformed
        // TODO add your handling code here:
        //Select Model, Iphone 7, Iphone 6s, Iphone 6, Iphone 5s, Iphone 5, j5 2017, j7 2017, s8, s8 plus, c7, g5 plus , g4 plus, z play, c plus, moto m, k5 note, k4 note, z2 plus, k6 power, phab 2 plus, redmi note 4, redmi note 3, redmi 4, redmi 3s prime, mi note 2
       
    }//GEN-LAST:event_mobileCompanyActionPerformed

    private void searchMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMobileActionPerformed
        // TODO add your handling code here:
        //jPanel6.setVisible(true);
        String nu=mobileImeiNumber1.getText();
        
        if(nu.equalsIgnoreCase("Mobile Imei Number")){
            
            JOptionPane.showMessageDialog(this,"Enter valid imei number");
        }else{
            
            boolean b = setMobileData(nu);
            
            if(b)
                jPanel6.setVisible(true);
            
            else
                JOptionPane.showMessageDialog(this, "Invalid Imei Number");
            
            
        }
    }//GEN-LAST:event_searchMobileActionPerformed

    private void mobileAllCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileAllCompanyActionPerformed
        // TODO add your handling code here:
        check();
    }//GEN-LAST:event_mobileAllCompanyActionPerformed

    private void mobileSamsungCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileSamsungCompanyActionPerformed
        // TODO add your handling code here:
        check();
    }//GEN-LAST:event_mobileSamsungCompanyActionPerformed

    private void mobileAppleCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileAppleCompanyActionPerformed
        // TODO add your handling code here:
        check();
    }//GEN-LAST:event_mobileAppleCompanyActionPerformed

    private void mobileImeiNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileImeiNumberKeyTyped
        // TODO add your handling code here:
        int key = (int)evt.getKeyChar();
      
      if(key<48 || key>57){
         Toolkit.getDefaultToolkit().beep();
            evt.consume();
         
      }
        
        
        String text = mobileImeiNumber.getText();
        
    
        
            if(text.equalsIgnoreCase("Mobile imei Number")){
        
                mobileImeiNumber.setText("");
            
            }else if(text.isEmpty()){
        
                 mobileImeiNumber.setText("Mobile imei Number");
            }
        
    }//GEN-LAST:event_mobileImeiNumberKeyTyped

    private void mobilePriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobilePriceKeyTyped
        // TODO add your handling code here:
        int key = (int)evt.getKeyChar();
      
      if(key<48 || key>57){
         Toolkit.getDefaultToolkit().beep();
            evt.consume();
         
      }
        
        
        String text = mobilePrice.getText();
        
    
        
            if(text.equalsIgnoreCase("Price")){
        
                mobilePrice.setText("");
            
            }else if(text.isEmpty()){
        
                 mobilePrice.setText("Price");
            }
        
    }//GEN-LAST:event_mobilePriceKeyTyped

    private void mobileModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileModelActionPerformed

    private void mobileMotorolaCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileMotorolaCompanyActionPerformed
        // TODO add your handling code here:
        check();
    }//GEN-LAST:event_mobileMotorolaCompanyActionPerformed

    private void mobileLenovoCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileLenovoCompanyActionPerformed
        // TODO add your handling code here:
        check();
    }//GEN-LAST:event_mobileLenovoCompanyActionPerformed

    private void mobileXiaomiCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileXiaomiCompanyActionPerformed

        // TODO add your handling code here:
        check();
    }//GEN-LAST:event_mobileXiaomiCompanyActionPerformed

    private void mobileSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileSellActionPerformed
        // TODO add your handling code here:
        
       
        
        
        if(validationOfSellMobile()){
                 
            int data = SellMobile.sellMobile(mobileSellInfo);
            
            if(data>0){
                
                JOptionPane.showMessageDialog(this, "action completed");
                int b=DeleteMobile.deleteMobile(mobileImeiNumber1.getText());
        
        System.err.println(b);
                mobilePrint.setEnabled(true);
            }else{
                JOptionPane.showMessageDialog(this, "plz try again");
                mobilePrint.setEnabled(false);
            }
            
           
        
            
        }
        
         
        
       
    }//GEN-LAST:event_mobileSellActionPerformed

    private void mobileCustomerNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileCustomerNumberKeyTyped
        // TODO add your handling code here:
        int key = (int)evt.getKeyChar();
      
      if(key<48 || key>57){
         Toolkit.getDefaultToolkit().beep();
            evt.consume();
         
      }
    }//GEN-LAST:event_mobileCustomerNumberKeyTyped

    private void mobileCompanyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mobileCompanyItemStateChanged
        // TODO add your handling code here:
        String cmpy = mobileCompany.getSelectedItem().toString();
        
        if(!cmpy.equalsIgnoreCase("Select Company")){
            mobileModel.setEnabled(true);
            
            switch(cmpy){
                
                case "Apple":
                    
                    mobileModel.removeAllItems();
                    for (int i = 0; i < mobileAppleModel.length; i++) {
                        
                        mobileModel.addItem(mobileAppleModel[i]);
                        
                    }
                        break;
                
                case "Samsung":
                    mobileModel.removeAllItems();
                    
                    for(int i=0;i<mobileSamsungModel.length;i++){
                        
                        mobileModel.addItem(mobileSamsungModel[i]);
                    }
                  break;
                case "Motorola":
                    
                    mobileModel.removeAllItems();
                    
                    for(int i=0;i<mobileMotorolaModel.length;i++){
                        
                        mobileModel.addItem(mobileMotorolaModel[i]);
                    }
                        break;
                case "Lenovo":
                        
                        mobileModel.removeAllItems();
                    
                    for(int i=0;i<mobileLenovoModel.length;i++){
                        
                        mobileModel.addItem(mobileLenovoModel[i]);
                    }
                        break;
                    
                case "Xiaomi":
                        mobileModel.removeAllItems();
                    
                    for(int i=0;i<mobileXiaomiModel.length;i++){
                        
                        mobileModel.addItem(mobileXiaomiModel[i]);
                    }
                        break;
                    
                    
        }
    }//GEN-LAST:event_mobileCompanyItemStateChanged
 else{
            mobileModel.removeAllItems();
            mobileModel.setEnabled(false);
        }
    }   
    private void mobileImeiNumber1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileImeiNumber1KeyTyped
        // TODO add your handling code here:
        
        int key = (int)evt.getKeyChar();
      
      if(key<48 || key>57){
         Toolkit.getDefaultToolkit().beep();
            evt.consume();
         
      }
        
        
        String text = mobileImeiNumber1.getText();
        
    
        
            if(text.equalsIgnoreCase("Mobile imei Number")){
        
                mobileImeiNumber1.setText("");
            
            }else if(text.isEmpty()){
        
                 mobileImeiNumber1.setText("Mobile imei Number");
            }
        
    }//GEN-LAST:event_mobileImeiNumber1KeyTyped

    private void mobileAddResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileAddResetActionPerformed
        // TODO add your handling code here:
        
        mobileImeiNumber.setText("Mobile Imei Number");
        mobileCompany.setSelectedItem(new String("Select Company"));
        mobileModel.setSelectedItem(new String("Select Model"));
        mobilePrice.setText("Price");
        mobileWarranty.setSelectedItem(new String("Select Warranty"));
        mobileCharger.setSelected(false);
        mobileEarphones.setSelected(false);
        mobileUsbCable.setSelected(false);
        
        
        
    }//GEN-LAST:event_mobileAddResetActionPerformed

    private void mobilePrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobilePrintActionPerformed
            // TODO add your handling code here:
        
       // jPanel5.print(null);
        
    }//GEN-LAST:event_mobilePrintActionPerformed

    private void mobileAllCompanyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mobileAllCompanyItemStateChanged
        // TODO add your handling code here:
        
        if(mobileAllCompany.isSelected()){
        jTable1.removeAll();
                getMobileList("all");
        }
        
    }//GEN-LAST:event_mobileAllCompanyItemStateChanged

    private void mobileAppleCompanyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mobileAppleCompanyItemStateChanged
        // TODO add your handling code here:
        
        if(mobileAppleCompany.isSelected()){
            
            jTable1.removeAll();
        
            
            
            getMobileList("Apple");
        }
    }//GEN-LAST:event_mobileAppleCompanyItemStateChanged

    private void mobileSamsungCompanyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mobileSamsungCompanyItemStateChanged
        // TODO add your handling code here:
        
         if(mobileSamsungCompany.isSelected()){
            
            jTable1.removeAll();
        
            
            
            getMobileList("Samsung");
        }
    }//GEN-LAST:event_mobileSamsungCompanyItemStateChanged

    private void mobileMotorolaCompanyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mobileMotorolaCompanyItemStateChanged
 if(mobileMotorolaCompany.isSelected()){
            
            jTable1.removeAll();
        
            
            
            getMobileList("Motorola");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mobileMotorolaCompanyItemStateChanged

    private void mobileLenovoCompanyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mobileLenovoCompanyItemStateChanged
 if(mobileLenovoCompany.isSelected()){
            
            jTable1.removeAll();
        
            
            
            getMobileList("Lenovo");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mobileLenovoCompanyItemStateChanged

    private void mobileXiaomiCompanyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mobileXiaomiCompanyItemStateChanged
 if(mobileXiaomiCompany.isSelected()){
            
            jTable1.removeAll();
        
            
            
            getMobileList("Xiaomi");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mobileXiaomiCompanyItemStateChanged

    private void printListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printListActionPerformed
        try {
            // TODO add your handling code here:

            jTable1.print();
        } catch (PrinterException ex) {
            Logger.getLogger(WelcomeForm1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printListActionPerformed
    
    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPhone;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logout;
    private javax.swing.JLabel mobileAccessories;
    private javax.swing.JButton mobileAddReset;
    private javax.swing.JRadioButton mobileAllCompany;
    private javax.swing.JRadioButton mobileAppleCompany;
    private javax.swing.JCheckBox mobileCharger;
    private javax.swing.JComboBox mobileCompany;
    private javax.swing.JLabel mobileCompanyForm;
    private javax.swing.JTextArea mobileCustomerAddress;
    private javax.swing.JTextField mobileCustomerName;
    private javax.swing.JTextField mobileCustomerNumber;
    private javax.swing.JComboBox mobileCustomerPayment;
    private javax.swing.JCheckBox mobileEarphones;
    private javax.swing.JTextField mobileImeiNumber;
    private javax.swing.JTextField mobileImeiNumber1;
    private javax.swing.JRadioButton mobileLenovoCompany;
    private javax.swing.JComboBox mobileModel;
    private javax.swing.JLabel mobileModelForm;
    private javax.swing.JRadioButton mobileMotorolaCompany;
    private javax.swing.JTextField mobilePrice;
    private javax.swing.JLabel mobilePriceForm;
    private javax.swing.JButton mobilePrint;
    private javax.swing.JRadioButton mobileSamsungCompany;
    private javax.swing.JButton mobileSell;
    private javax.swing.JCheckBox mobileUsbCable;
    private javax.swing.JComboBox mobileWarranty;
    private javax.swing.JLabel mobileWarrantyForm;
    private javax.swing.JRadioButton mobileXiaomiCompany;
    private javax.swing.JButton printList;
    private javax.swing.JButton searchMobile;
    private javax.swing.JLabel userImage;
    private javax.swing.JLabel userName;
    // End of variables declaration//GEN-END:variables
    private ArrayList<String> mobileInfo;
    private ArrayList<String> mobileSellInfo;
    private String mobileAppleModel[]={" Iphone 7", "Iphone 6s", "Iphone 6", "Iphone 5s", "Iphone 5"};
    private String mobileSamsungModel[]={" j5 2017", "j7 2017", "s8", "s8 plus"," c7"};
    private String mobileMotorolaModel[]={" g5 plus" , "g4 plus "," z play ", "c plus "," moto m"};
    private String mobileLenovoModel[]={"k5 note", "k4 note", "z2 plus"," k6 power"," phab 2 plus"};
    private String mobileXiaomiModel[]={"redmi note 4", "redmi note 3"," redmi 4", "redmi 3s prime"," mi note 2"};
    private ArrayList<MobileData>mobileList = new ArrayList<>();
    
    
    
    private void check() {
       
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        if(mobileAllCompany.isSelected()){
            jPanel9.setVisible(true);
        }else if(mobileAppleCompany.isSelected()){
            jPanel9.setVisible(true);
        }else if(mobileSamsungCompany.isSelected()){
            jPanel9.setVisible(true);
        }else if(mobileMotorolaCompany.isSelected()){
            jPanel9.setVisible(true);
        }else if(mobileLenovoCompany.isSelected()){
            jPanel9.setVisible(true);
        }else if(mobileXiaomiCompany.isSelected()){
            jPanel9.setVisible(true);
        }
        
    
    }

    private boolean validationOfMobileData() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
        String imei=this.mobileImeiNumber.getText();
        String company = this.mobileCompany.getSelectedItem().toString();
        String model = this.mobileModel.getSelectedItem().toString();
        String price = this.mobilePrice.getText();
        String warranty=this.mobileWarranty.getSelectedItem().toString();
        String ac;
        String ear="";
        String chr="";
        String usb="";
        
        if(!(imei.length()==15)){
            
            JOptionPane.showMessageDialog(this,"imei length should be 15");
            return false;
            
        }else if(company.equalsIgnoreCase("Select company")){
            
            JOptionPane.showMessageDialog(this,"company not selected");
            return false;
        }else if(model.equalsIgnoreCase("Select model")){
            
            JOptionPane.showMessageDialog(this,"model not selected");
            return false;
        }else if(price.equalsIgnoreCase("price")){
            
            JOptionPane.showMessageDialog(this,"Enter price");
            return false;
        }else if(warranty.equalsIgnoreCase("Select warranty")){
            
            JOptionPane.showMessageDialog(this,"Warranty not selected");
              return false; 
        }
        
        if(mobileEarphones.isSelected()){
            ear= " Earphones ";
        }else{
            ear="";
        }
        if(mobileCharger.isSelected()){
            chr=" Charger ";
            
        }else{
            chr="";
        }
        if(mobileUsbCable.isSelected()){
            usb=" Usb Cable ";
        }else{
            usb="";
            
        }
        ac=ear+" "+chr+" "+usb;
        
       
        
        mobileInfo = new ArrayList<>();
        mobileInfo.add(imei);
        mobileInfo.add(company);
        mobileInfo.add(model);
        mobileInfo.add(price);
        mobileInfo.add(warranty);
        mobileInfo.add(ac);
        
        return true;
        
    }

    private boolean validationOfSellMobile() {
     //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
            String imei = this.mobileImeiNumber1.getText();
           String name = this.mobileCustomerName.getText();
           String payment=this.mobileCustomerPayment.getSelectedItem().toString();
           String number = this.mobileCustomerNumber.getText();
           String address1=this.mobileCustomerAddress.getText();
           
           if((name.isEmpty()) || (name.length()<4)){
               
               JOptionPane.showMessageDialog(this,"Length of name should be greater than 3 and it should not be empty");
               return false;
           }else if(payment.equalsIgnoreCase("Select Payment mode")){
               
               JOptionPane.showMessageDialog(this,"Payment mode not selected");
                return false;
           }else if(!(number.length()==10)){
               
               JOptionPane.showMessageDialog(this, "Enter valid phone number of 10 digits");
               return false;
           }else if(address1.length()<10){
               JOptionPane.showMessageDialog(this, "address length should be greater than 10");
               return false;
           }
           mobileSellInfo = new ArrayList<>();
           mobileSellInfo.add(imei);
           mobileSellInfo.add(name);
            mobileSellInfo.add(payment);
            mobileSellInfo.add(number);
            mobileSellInfo.add(address1);
        
        
           return true;
    }

    private boolean setMobileData(String nu) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
            Connection con = GetConnection.openConnection();
            
            String sql = "select model,company,warranty,price from mobile_data where imei=?";
            
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            
            ps.setString(1, nu);
            
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()){
                
                String model = rs.getString(1);
                String company = rs.getString(2);
                String warranty = rs.getString(3);
                String price = rs.getString(4);
                mobileModelForm.setText("Model :- "+model);
                mobileCompanyForm.setText("Company :- "+company);
                mobileWarrantyForm.setText("Warranty :- "+warranty);
                mobilePriceForm.setText("Price :- "+price);
                return true;
            }else{
                
                return false;
            }
            
            
        } catch (SQLException ex) {
           // Logger.getLogger(WelcomeForm1.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            
            GetConnection.closeConnection();
            
        }
            
          return false;
          //ye kbhi call ni hoga
    
    }

    private void setUserData() {
        try {
            // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            
            Connection con = GetConnection.openConnection();
            
            String sql = "select first_name,last_name,image from user_register where login_id=?";
            
            PreparedStatement ps = con.prepareStatement(sql);
            
            ps.setString(1,HomeFrame.userLogin);
            
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()){
                
                String fName = rs.getString(1);
                String lName = rs.getString(2);
                
                byte image[]=rs.getBytes(3);
                
                userName.setText(fName+" "+lName);
                
                this.userImage.setIcon(new ImageIcon(new ImageIcon(image).getImage().getScaledInstance(74, 74, Image.SCALE_DEFAULT)));
            }
            
        } catch (SQLException ex) {
           // Logger.getLogger(WelcomeForm1.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            
            GetConnection.closeConnection();
            
        }
        
    
    }

    private void getMobileList(String all) {
      
        //removeMolileList();
        
        mobileList.clear();
        
        String sql="";
        
        if(all.equals("all")){
        
             sql = "select model, price , warranty from mobile_data";
               
        }else {
        
            sql="select model, price , warranty from mobile_data where company='"+all+"'";
        }
        
        
        
            try {
                
                Connection con = GetConnection.openConnection();
                
                PreparedStatement ps = con.prepareStatement(sql);
                
                ResultSet rs = ps.executeQuery();
                
                //int i=0;
                //int j=0;
                
                int sno=1;
                
                while(rs.next()){
                
                   // if(i<25){
                    String model = rs.getString(1);
                    String price  = rs.getString(2);
                    String warranty = rs.getString(3);
                    
                    MobileData md = new MobileData(String.valueOf(sno).trim(), model.trim().toUpperCase(), price, findQuantity(all),warranty);
                    
                    mobileList.add(md);
                    
                    sno++;
                    
                   /* jTable1.setValueAt(String.valueOf(i+1), i, j);
                     jTable1.setValueAt(model, i, j+1);
                    jTable1.setValueAt(price, i, j+2);
                    jTable1.setValueAt(String.valueOf(1), i, j+3);
                   jTable1.setValueAt(warranty, i, j+4);
                   
                   i++;
                    }
                */
                }
                
               setTableContent();
                
            } catch (SQLException ex) {
               // Logger.getLogger(WelcomeForm1.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
            GetConnection.closeConnection();
            
            }
            
            
            
        
        }

    private void removeMolileList() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
   
        //mobileList.clear();
        
        DefaultTableModel dm = (DefaultTableModel)jTable1.getModel();
        
        dm.setRowCount(WIDTH);
        
        //dm.getRowCount();

        
        
        
    }

    private void setTableContent() {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
   
         DefaultTableModel dm = (DefaultTableModel)jTable1.getModel();
        
        dm.setRowCount(mobileList.size());
        
        Collections.sort(mobileList);
        
        
        int j=0;
        
        for(int i=0;i<mobileList.size();i++){
            
            MobileData d =mobileList.get(i);
          jTable1.setValueAt(i+1,i , j);
          jTable1.setValueAt(d.getModel(), i, j+1);
          jTable1.setValueAt(d.getPrice(), i, j+2);
          jTable1.setValueAt(d.getQuantity(), i, j+3);
          jTable1.setValueAt(d.getWarranty(), i, j+4);
                   
        }   
    
    
    
    }

    private String findQuantity(String all) {
        
        String quantity="1";
        
        String sql ="select count(model) from mobile_data where model='s8'";
        
        
        
        switch(all){
        
            case "all":
                
                
                break;
                
            case "Apple":
                
                break;
                
            case "Samsung":
                
                break;
                
            case "Motorola":
                
                break;
                
            case "Lenovo":
                
                break;
                
            case "Xiaomi":
                
                break;
        
        
        }
        
        
        
        return quantity;
      }
        

        
    
}
